#!/bin/bash
# 
# git doesn't keep track of empty directories,
# so let's track ".gitkeep" files instead.
# 
# This wrapper attemps to hide the existence of ".gitkeep" files from the user,
# while hiding their nonexistence from git.

GIT="/usr/bin/git"

function reinsert_keepfiles {
  find -name .git -prune -o -type d -empty -print |
    sed 's/$/\/.gitkeep/g' |
    tr '\n' '\0' | xargs -0 "$GIT" ls-files |
    tr '\n' '\0' | xargs -0 touch 2> /dev/null
}

function hide_keepfiles {
  find -name .git -prune -o -name '\.gitkeep' -print0 |
    xargs -0 rm -f
}

if [ "$#" = 0 ]; then
  "$GIT"
  exit
fi

COMMAND="$1"; shift
case "$COMMAND" in
  (git-*)
    "$0" "$(echo "$COMMAND" | cut -c5-)" "$@";;
  (checkout|checkout-index|clean|commit|diff|diff-files|merge|mv|rebase|reset|revert|stash|update-index)
    reinsert_keepfiles
    "$GIT" "$COMMAND" "$@"
    STATUS="$?"
    hide_keepfiles
    exit "$STATUS";;
  (status)
    reinsert_keepfiles
    "$GIT" "$COMMAND" "$@"
    STATUS="$?"
    UNTRACKED_DIRS="$(find -name .git -prune -o -type d -empty -print |
      sed 's/^/#	/g')"
    if [ "$UNTRACKED_DIRS" ]; then
      echo "#"
      echo "# Untracked directories:"
      echo "#   (use \"git add <dir>/.gitkeep\" to include in what will be committed)"
      echo "#"
      echo "$UNTRACKED_DIRS"
    fi
    hide_keepfiles
    exit "$STATUS";;
  (*)
    "$GIT" "$COMMAND" "$@";;
esac
